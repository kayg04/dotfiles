#!/usr/bin/env bash
# import sanity
set -euo pipefail

# global declarations
SCRIPT_PATH=$(dirname $(realpath "$0"))
ZSH="${HOME}/.config/omz"
ZSH_CUSTOM="${HOME}/.config/omz/custom"

update() {
    case "${1}" in
        "awesome")
            updateAwesomeWM
            ;;
        "compton")
            updateCompton
            ;;
        "desktop")
            updateDesktop
            ;;
        "emacs")
            updateEmacs
            ;;
        "firefox")
            updateFirefox
            ;;
        "plasma")
            updatePlasma
            ;;
        "thunderbird")
            updateThunderbird
            ;;
        "chromium")
            updateChromium
            ;;
        "utilsh")
            updateUtilsh
            ;;
        "zsh")
            updateZSH
            ;;
    esac
}

updateAwesomeWM() {
    ln -sf "${SCRIPT_PATH}"/.config/awesome/*.lua "${HOME}"/.config/awesome/
    ln -sf "${SCRIPT_PATH}"/.config/awesome/themes/default/*.lua "${HOME}"/.config/awesome/themes/default/
}

updateCompton() {
    ln -sf "${SCRIPT_PATH}"/.config/compton/*.conf "${HOME}"/.config/compton/
}

updateDesktop() {
    ln -sf "${SCRIPT_PATH}"/.local/share/applications/*.desktop "${HOME}"/.local/share/applications/
}

updateEmacs() {
    ln -sf "${SCRIPT_PATH}"/.emacs "${HOME}"/
    ln -sf "${SCRIPT_PATH}"/.config/emacs/* "${HOME}"/.config/emacs/
}

updateFirefox() {
    source "${SCRIPT_PATH}"/.mozilla/firefox/bootstrap.sh

    applyPolicies
    applyProfilesINI
    updateUserJS
    applyUserJS
    cleanUp
}

updatePlasma() {
    ln -sf "${SCRIPT_PATH}"/.config/autostart-scripts/*.sh "${HOME}"/.config/autostart-scripts/
    ln -sf "${SCRIPT_PATH}"/.config/plasma-workspace/env/*.sh "${HOME}"/.config/plasma-workspace/env/
}

updateThunderbird() {
    ln -sf "${SCRIPT_PATH}"/.thunderbird/profiles.ini "${HOME}"/.thunderbird/
}

updateVSCodium() {
    ln -sf "${SCRIPT_PATH}"/.config/VSCodium/User/*.json "${HOME}"/.config/VSCodium/User/
}

updateChromium() {
    ln -sf "${SCRIPT_PATH}"/.config/chromium-flags.conf "${HOME}"/.config/
}

updateUtilsh() {
    ln -sf "${SCRIPT_PATH}"/.local/bin/* "${HOME}"/.local/bin/
}

updateZSH() {
    if [[ ! -d "${ZSH_CUSTOM}"/plugins/zsh-syntax-highlighting ]]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}"/plugins/zsh-syntax-highlighting
    fi

    if [[ ! -d "${ZSH_CUSTOM}"/plugins/zsh-autosuggestions ]]; then
        git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}"/plugins/zsh-autosuggestions
    fi

    ln -sf "${SCRIPT_PATH}"/.zshrc "${HOME}"/
}

setup() {
    case "${1}" in
        "awesome")
            setupAwesomeWM
            ;;
        "compton")
            setupCompton
            ;;
        "desktop")
            setupDesktop
            ;;
        "emacs")
            setupEmacs
            ;;
        "firefox")
            setupFirefox
            ;;
        "plasma")
            setupPlasma
            ;;
        "thunderbird")
            setupThunderbird
            ;;
        "chromium")
            setupChromium
            ;;
        "utilsh")
            setupUtilsh
            ;;
        "zsh")
            setupZSH
            ;;
    esac
}

setupAwesomeWM() {
    mkdir -p "${HOME}"/.config/awesome
    mkdir -p "${HOME}"/.config/awesome/themes/default
    updateAwesomeWM
}

setupCompton() {
    mkdir -p "${HOME}"/.config/compton
    updateCompton
}

setupDesktop() {
    mkdir -p "${HOME}"/.local/share/applications
    updateDesktop
}

setupEmacs() {
    mkdir -p "${HOME}"/.config/emacs
    updateEmacs
}

setupFirefox() {
    source "${SCRIPT_PATH}"/.mozilla/firefox/bootstrap.sh

    applyPolicies
    createProfilesINIDir
    applyProfilesINI
    createProfiles
    updateUserJS
    applyUserJS
    cleanUp
    startFirefox
}

setupPlasma() {
    updatePlasma
}

setupThunderbird() {
    mkdir -p "${HOME}"/.config/thunderbird/primary
    updateThunderbird
}

setupVSCodium() {
    updateVSCodium
}

setupChromium() {
    updateChromium
}

setupUtilsh() {
    updateUtilsh
}

setupZSH() {
    if [[ ! upgrade_oh_my_zsh || ! -d "${HOME}/.oh-my-zsh" ]]; then
        export ZSH="${HOME}/.config/omz"
        sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    else
        exit 1
    fi
}

addToPath() {
    echo -e "Adding this program to \$PATH so that it is globally available."
    mkdir -p "${HOME}"/.local/bin
    ln -sf "${SCRIPT_PATH}"/dot "${HOME}"/.local/bin/
}

refresh() {
    git --git-dir="${SCRIPT_PATH}/.git" --work-tree="${SCRIPT_PATH}" pull
}

main() {
    case "${1}" in
        "setup")
            setup "${2}"
            ;;
        "update")
            update "${2}"
            ;;
        "set")
            addToPath
            ;;
        "refresh")
            refresh
            ;;
        *)
            echo -e "Invalid option."
            ;;
    esac
}

main "${@}"
