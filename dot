#!/usr/bin/env bash
# global declarations
SCRIPT_PATH=$(dirname $(realpath "$0"))

# Emacs
EMACS_PATH="${SCRIPT_PATH}/emacs"
EMACS_LOCAL_PATH="${EMACS_PATH}/.config/doom"
EMACS_REMOTE_PATH="${HOME}/.config/doom"

# Firefox
FIREFOX_PATH="${SCRIPT_PATH}/firefox"
FIREFOX_LOCAL_PATH="${FIREFOX_PATH}/.mozilla/firefox"
FIREFOX_REMOTE_PATH="${HOME}/.mozilla/firefox"
FIREFOX_PROFILES_PATH="${HOME}/.config/firefox"

# ZSH
ZSH="${HOME}/.config/omz"
ZSH_CUSTOM="${HOME}/.config/omz/custom"
ZSH_PATH="${SCRIPT_PATH}/zsh"

# import helpers
source "${SCRIPT_PATH}"/scripts/.local/bin/functions/helper

updateDesktop() {
    ln -sf "${SCRIPT_PATH}"/.local/share/applications/*.desktop "${HOME}"/.local/share/applications/
}

updateEmacs() {
    echo -ne "Linking personal configuration..."
    run ln -sf "${EMACS_LOCAL_PATH}"/* "${EMACS_REMOTE_PATH}"

    echo -e "Refreshing Doom Emacs..."
    "${HOME}/.emacs.d/bin/doom" refresh
}

updateFirefox() {
    source "${SCRIPT_PATH}"/scripts/.local/bin/functions/firefox/userjs

    fetchSrc "https://github.com/ghacksuserjs/ghacks-user.js.git" "${SCRIPT_PATH}/workdir"
    mkTweaks
    applyUserJS
    clean "${SCRIPT_PATH}/workdir"
}

updatePlasma() {
    ln -sf "${SCRIPT_PATH}"/.config/autostart-scripts/*.sh "${HOME}"/.config/autostart-scripts/
    ln -sf "${SCRIPT_PATH}"/.config/plasma-workspace/env/*.sh "${HOME}"/.config/plasma-workspace/env/
    ln -sf "${SCRIPT_PATH}"/.pam_environment "${HOME}"/
}

updateSystemd() {
    ln -sf "${SCRIPT_PATH}"/.config/systemd/user/*.service "${HOME}"/.config/systemd/user/

    for service in $(ls -1 "${HOME}/.config/systemd/user" | cut -d '.' -f1); do
        systemctl --user enable --now "${service}"
    done
}

updateThunderbird() {
    ln -sf "${SCRIPT_PATH}"/.thunderbird/profiles.ini "${HOME}"/.thunderbird/
}

updateVSCodium() {
    ln -sf "${SCRIPT_PATH}"/.config/VSCodium/User/*.json "${HOME}"/.config/VSCodium/User/
}

updateChromium() {
    ln -sf "${SCRIPT_PATH}"/.config/chromium-flags.conf "${HOME}"/.config/
}

updateUtilsh() {
    ln -sf "${SCRIPT_PATH}"/.local/bin/* "${HOME}"/.local/bin/
}

updateZSH() {
    if [[ ! -d "${ZSH_CUSTOM}"/plugins/zsh-syntax-highlighting ]]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}"/plugins/zsh-syntax-highlighting
    fi

    if [[ ! -d "${ZSH_CUSTOM}"/plugins/zsh-autosuggestions ]]; then
        git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}"/plugins/zsh-autosuggestions
    fi

    ln -sf "${SCRIPT_PATH}"/.zshrc "${HOME}"/
}

update() {
    case "${1}" in
        "desktop")
            updateDesktop
            ;;
        "doom"|"emacs")
            updateEmacs
            ;;
        "firefox")
            updateFirefox
            ;;
        "plasma")
            updatePlasma
            ;;
        "spotify")
            updateSpotify
            ;;
        "systemd")
            updateSystemd
            ;;
        "thunderbird")
            updateThunderbird
            ;;
        "chromium")
            updateChromium
            ;;
        "utilsh")
            updateUtilsh
            ;;
        "zsh")
            updateZSH
            ;;
    esac
}

setupDesktop() {
    mkdir -p "${HOME}"/.local/share/applications
    updateDesktop
}

setupEmacs() {
    echo -ne "Creating Doom Emacs directory..."
    run mkdir -p "${EMACS_REMOTE_PATH}"

    fetchSrc "https://github.com/hlissner/doom-emacs" "${HOME}/.emacs.d"

    echo -e "Unleashing Doom..."
    "${HOME}"/.emacs.d/bin/doom install

    updateEmacs
}

setupFirefox() {
    source "${SCRIPT_PATH}"/scripts/.local/bin/functions/firefox/profiles
    source "${SCRIPT_PATH}"/scripts/.local/bin/functions/firefox/userjs

    mkProfilesDir
    linkProfilesINI
    mkProfiles
    fetchSrc "https://github.com/ghacksuserjs/ghacks-user.js.git" "${SCRIPT_PATH}/workdir"
    mkTweaks
    applyUserJS
    clean "${SCRIPT_PATH}/workdir"

    echo -e "Firefox has been succesfully setup. Please select your default profile. Have a good day!"
    setsid --fork firefox --profileManager 2>/dev/null 1>&2
}

setupPlasma() {
    updatePlasma
}

setupSpotify() {
    source "${SCRIPT_PATH}"/.config/spotify/wmname.sh

    # fix wm name setting
    fetchSource
    buildLibrary
    moveLibrary
    fixSpotify
}

setupSystemd() {
    mkdir -p "${HOME}/.config/systemd/user"
}

setupThunderbird() {
    mkdir -p "${HOME}"/.config/thunderbird/primary
    updateThunderbird
}

setupVSCodium() {
    updateVSCodium
}

setupChromium() {
    updateChromium
}

setupUtilsh() {
    updateUtilsh
}

setupZSH() {
    if [[ ! upgrade_oh_my_zsh || ! -d "${HOME}/.oh-my-zsh" ]]; then
        export ZSH="${HOME}/.config/omz"
        sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    else
        exit 1
    fi
}

addToPath() {
    echo -e "Adding this program to \$PATH so that it is globally available."
    mkdir -p "${HOME}"/.local/bin
    ln -sf "${SCRIPT_PATH}"/dot "${HOME}"/.local/bin/
}

refresh() {
    git --git-dir="${SCRIPT_PATH}/.git" --work-tree="${SCRIPT_PATH}" pull
}

main() {
    case "${1}" in
        "setup")
            setup "${2}"
            ;;
        "update")
            update "${2}"
            ;;
        "set")
            addToPath
            ;;
        "refresh")
            refresh
            ;;
        *)
            echo -e "Invalid option."
            ;;
    esac
}

setup() {
    case "${1}" in
        "desktop")
            setupDesktop
            ;;
        "doom"|"emacs")
            setupEmacs
            ;;
        "firefox")
            setupFirefox
            ;;
        "plasma")
            setupPlasma
            ;;
        "spotify")
            setupSpotify
            ;;
        "systemd")
            setupSystemd
            ;;
        "thunderbird")
            setupThunderbird
            ;;
        "chromium")
            setupChromium
            ;;
        "utilsh")
            setupUtilsh
            ;;
        "zsh")
            setupZSH
            ;;
    esac
}

addToPath() {
    echo -ne "Linking this script to ${HOME}/.local/bin. Please ensure it is in your \$PATH."
    mkdir -p "${HOME}"/.local/bin
    run ln -sf "${SCRIPT_PATH}"/dot "${HOME}"/.local/bin/
}

refresh() {
    echo -ne "Fetching latest code..."
    run git --git-dir="${SCRIPT_PATH}/.git" --work-tree="${SCRIPT_PATH}" pull
}

main() {
    case "${1}" in
        "setup")
            if [[ ${2} == "dot" ]]; then
               addToPath
            else
                setup "${2}"
            fi
            ;;
        "update")
            update "${2}"
            ;;
        "refresh")
            refresh
            ;;
        *)
            echo -e "Invalid option."
            ;;
    esac
}

main "${@}"
