# Bash Sanity
# https://kvz.io/blog/2013/11/21/bash-best-practices/
# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
# Exit script if a command fails
# Use: cmd || true to bypass
set -o errexit # aka: set -e
# Exit script if the left side of a pipe fails
set -o pipefail
# Exit if a variable is used but not assigned
set -o nounset # aka: set -u
# DEBUG MODE
# Show output of statements as they are being executed
# set -o xtrace # aka: set -x

run() {
    if eval "${@}" 2>/dev/null 1>&2; then
        printf '\u2714\n'
    else
        printf '\u274c\n'
        exit 1
    fi
}

# global declarations
export SCRIPT_PATH=$(dirname $(realpath "$0"))

fetchSource() {
    export URL="${1}"
    export REPO_NAME=$(echo "${URL}" | cut -d '/' -f5 | cut -d '.' -f1)

    if [[ -d "${SCRIPT_PATH}/${REPO_NAME}" ]]; then
        cleanUp
    fi

    echo -ne "Fetching source..."
    run git clone --quiet "${URL}" "${SCRIPT_PATH}/${REPO_NAME}"
}

cleanUp() {
    echo -ne "Cleaning up all the cruft..."

    run rm -rf "${SCRIPT_PATH}/${REPO_NAME}"
}
