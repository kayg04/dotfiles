updateChromium() {
    echo -ne "Linking chromium configuration..."
    run ln -sf "${CHROMIUM_LOCAL_PATH}/chromium-flags.conf" "${CHROMIUM_REMOTE_PATH}"
}

updateDesktop() {
    echo -ne "Linking desktop apps..."
    run ln -sf "${DESKTOP_LOCAL_PATH}"/*.desktop "${DESKTOP_REMOTE_PATH}"
}

updateEmacs() {
    echo -ne "Linking personal configuration..."
    run ln -sf "${EMACS_LOCAL_PATH}"/* "${EMACS_REMOTE_PATH}"

    echo -e "Refreshing Doom Emacs..."
    "${HOME}/.emacs.d/bin/doom" sync
}

updateFirefox() {
    set +o nounset

    if [[ "${1}" ]]; then
        arg="${1}"
    else
        arg=""
    fi

    case "${arg}" in
        "--profile"|"-p")
            case "${3}" in
                "--install-extensions"|"-i")
                    if [[ -d "${FIREFOX_REMOTE_PATH}/${2,}" ]]; then
                        echo -e "Installing extensions:-"
                        for ext in "${FIREFOX_EXTENSIONS[@]}"; do
                            extName=$(echo "${ext}" | cut -d '/' -f7 | sed 's/\-/\ /g');

                            echo -e "  -> ${extName^}"
                            setsid --fork firefox --profile "${FIREFOX_REMOTE_PATH}/${1}" --new-tab "${ext}" 2>/dev/null 1>&2
                        done
                    else
                        echo -e "Profile not found."
                    fi
                    ;;
            esac
            ;;
        "")
            fetchSrc "https://github.com/ghacksuserjs/ghacks-user.js.git" "${SCRIPT_PATH}/workdir"
            echo -ne "Copying personal tweaks to fetched source..."
            run cp "${FIREFOX_LOCAL_PATH}/user-overrides.js" "${DEST}"

            echo -ne "Merging tweaks with ghacks user.js..."
            run "${DEST}/updater.sh" -s

            echo -e "Copying user.js to profile directories..."
            for profile in ${FIREFOX_PROFILES[@]}; do
                profileName="${profile^}"

                echo -ne "  => Copying user.js to profile: ${profileName}..."
                run cp "${DEST}/user.js" "${FIREFOX_REMOTE_PATH}/${profile}"
            done

            clean "${SCRIPT_PATH}/workdir"
            ;;
    esac
    set -o nounset
}

updateScripts() {
    echo -ne "Linking scripts..."
    run ln -sf "${SCRIPTS_LOCAL_PATH}"/* "${SCRIPTS_REMOTE_PATH}"
}

updateSSH() {
    echo -ne "Updating symlinks..."
    run ln -sf "${SSH_LOCAL_PATHS[AUTOSTART]}/ssh-add.sh" "${SSH_REMOTE_PATHS[AUTOSTART]}" && \
        ln -sf "${SSH_LOCAL_PATHS[PLASMA]}/askpass.sh" "${SSH_REMOTE_PATHS[PLASMA]}" && \
        ln -sf "${SSH_LOCAL_PATHS[PAM]}/.pam_environment" "${SSH_REMOTE_PATHS[PAM]}" && \
        ln -sf "${SSH_LOCAL_PATHS[SYSTEMD]}/ssh-agent.service" "${SSH_REMOTE_PATHS[SYSTEMD]}"

    echo -ne "Activating service..."
    run systemctl --user enable --now "ssh-agent"
}

updateThunderbird() {
    echo -ne "Linking profiles.ini..."
    run ln -sf "${THUNDERBIRD_LOCAL_PATH}/profiles.ini" "${THUNDERBIRD_REMOTE_PATH}"
}

updateTmux() {
    echo -ne "Updating source code..."
    run git --git-dir="${TMUX_REMOTE_PATH}/.git" --work-tree="${TMUX_REMOTE_PATH}" pull

    echo -ne "Relinking configurations..."
    run ln -sf "${TMUX_REMOTE_PATH}/.tmux.conf" "${HOME}" && ln -sf "${TMUX_LOCAL_PATH}/.tmux.conf.local" "${HOME}"
}

updateZSH() {
    echo -e "Installing plugins..."
    for plugin in "${!ZSH_PLUGINS_DEST[@]}"; do
        fetchSrc "${ZSH_PLUGINS_SRC[${plugin}]}" "${ZSH_PLUGINS_DEST[${plugin}]}"
    done

    echo -ne "Linking personal configuration..."
    run ln -sf "${ZSH_LOCAL_PATH}/.zshrc" "${ZSH_REMOTE_PATHS[ZSH]}"
}
